type Cuerpo {
    id: ID!
    denominacion: String!
}

type Compania {
    id: ID!
    actividad: String!
}

type Cuartel {
    id:ID!
    nombre:String!
    ubicacion:String!
}

type Servicio{
    id:ID!
    descripcion:String!
}
type Soldado{
    id :ID!
    nombre: String!
    apellido: String!
    grado: Float!
}
type SoldadoServicio {
    idSoldado: Float!
    idServicio: Float!
    fechaServicio: String!
    soldado: Soldado
    servicio: Servicio
}
type Query {
    findCuerpo(id: ID!): Cuerpo
    findAllCuerpos: [Cuerpo]
    findCompania(id: ID!): Compania
    findAllCompanias: [Compania]
    findAllCuartels: [Cuartel]
    findCuartelById(id:ID!): Cuartel
    finAllServicio:[Servicio]
    findServicioById(id:ID!):Servicio
    findAllSoldados: [Soldado]
    findSoldadoById(id:ID!): Soldado
    getSoldadosServicios: [SoldadoServicio]
    getSoldadoServicio(idSoldado: Float, idServicio: Float): SoldadoServicio






}

type Mutation {
    createCuerpo(denominacion: String!): Cuerpo
    deleteCuerpo(id: ID!): String
    updateCuerpo(id:ID!,denominacion:String!):Cuerpo

    createCompania(actividad: String!): Compania
    deleteCompania(id: ID!): String
    updateCompania(id:ID!,actividad:String!):Compania

    createCuartel(nombre:String!, ubicacion:String!):Cuartel
    deleteCuartel(id:ID!):String
    updateCuartel(id:ID!,nombre:String!,ubicacion:String!):Cuartel

    createServicio(descripcion:String!):Servicio
    deleteServicio(id:ID!):String
    updateServicio(id:ID!,descripcion:String!):Servicio

    createSoldado(nombre: String!, apellido: String!, grado: Float!): Soldado
    deleteSoldado(id: ID!):String
    updateSoldado(id:ID!,nombre: String!, apellido: String!, grado: Float!):Soldado

    createSoldadoServicio(idSoldado: Float, idServicio: Float, fechaServicio: String): SoldadoServicio
    deleteSoldadoServicio(idSoldado: Float, idServicio: Float): Boolean

}



